{
  "version": 3,
  "file": "data-api-functions.js",
  "sourceRoot": "../../src/utils/",
  "sources": [
    "data-api-functions.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "uuid = require('uuid/v4')\njwt = require('jsonwebtoken')\nschemaInfo = require('./config-wrapper').schemaInfo\nuserAuth = require('./config-wrapper').userAuth\nsecretKey = require('./config-wrapper').secretKey\nSECRET_KEY = uuid()\n\n#: Omit Properties from Object and get Copy\n\nobjOmit = (obj, keys) ->\n\tclone = Object.assign({}, obj)\n\tfor key in keys\n\t\tdelete obj[key]\n\treturn clone\n\n #: Response/Error JSON\n\nresponseFormat = (method, args, req, res) ->\n\ttry\n\t\tresponse = await method(...args);\n\t\tret_json =\n\t\t\tstatus: 'ok'\n\t\t\tresponse: response\n\t\tif res.locals.refresh_token?\n\t\t\tret_json.refresh_token = res.locals.refresh_token\n\t\treturn res.json(ret_json)\n\tcatch error\n\t\terr_json =\n\t\t\tstatus: 'error'\n\t\t\tresponse: error\n\t\tif res.locals.refresh_token?\n\t\t\terr_json.refresh_token = res.locals.refresh_token\n\t\treturn res.status(500).json(err_json)\n\n#: Update Query\n\nupdateQuery = (req, primary_key) ->\n\tupdate_query = objOmit(req.query, [ primary_key ])\n\tif update_query.update_primary?\n\t\tupdate_query[primary_key] = update_query.update_primary\n\t\tupdate_query.update_primary = null\n\treturn update_query\n\n#: Get Schema Info Async\n\nschemaAsync = (model, primary_key) ->\n\tPromise.resolve schemaInfo(model, primary_key)\n\n#: Incorrect Secret Key\n\nincorrectSecretKey = (res) ->\n\tres.status(401).json\n\t\tstatus: 'error'\n\t\tresponse:\n\t\t\tmessage: 'Incorrect secret key.'\n\t\t\tcodes: [ 'INCORRECT' ]\n\n#: Incorrect Username or Password JSON\n\nincorrectUserOrPass = (res) ->\n\tres.status(401).json\n\t\tstatus: 'error'\n\t\tresponse:\n\t\t\tmessage: 'Incorrect username or password.'\n\t\t\tcodes: [ 'INCORRECT' ]\n\n#: User Not Found JSON\n\nuserNotFound = (res) ->\n\tres.status(401).json\n\t\tstatus: 'error'\n\t\tresponse:\n\t\t\tmessage: 'User does not exist.'\n\t\t\tcodes: [ 'USER_NOT_FOUND' ]\n\n#: No Current Password JSON\n\nnoCurrentPass = (res) ->\n\tres.status(401).json\n\t\tstatus: 'error'\n\t\tresponse:\n\t\t\tmessage: 'Must include current password.'\n\t\t\tcodes: [ 'NO_CURRENT_PASS' ]\n\n#: Allowed Password Check\n\nallowedPassword = (req, res) ->\n\terror_msg = ''\n\terror_codes = []\n\tif req.query.username.length < 8\n\t\terror_msg += 'Username must be at least 8 characters. '\n\t\terror_codes.push 'USER_LENGTH'\n\tif !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(req.query.username)\n\t\terror_msg += 'Username must be valid email. '\n\t\terror_codes.push 'VALID_EMAIL'\n\tif req.query.password.length < 8\n\t\terror_msg += 'Password must be at least 8 characters. '\n\t\terror_codes.push 'PASS_LENGTH'\n\tif !/(?=.*[A-Za-z])(?=.*[0-9])/.test(req.query.password)\n\t\terror_msg += 'Password must have at least 1 letter and at least 1 character. '\n\t\terror_codes.push 'PASS_CHAR'\n\tif error_msg.length > 0\n\t\terror_msg = error_msg.substring(0, error_msg.length - 1)\n\t\terror =\n\t\t\tmessage: error_msg\n\t\t\tcodes: error_codes\n\t\treturn res.status(401).json(\n\t\t\tstatus: 'error'\n\t\t\tresponse: error)\n\treturn\n\n#: Sign JSON Web Token\n\nsignToken = (user) ->\n\texpires_in = 24 * 60 * 60\n\taccess_token = jwt.sign({\n\t\tusername: user.username\n\t\tuid: user.uid\n\t}, SECRET_KEY, expiresIn: expires_in)\n\n\treturn\n\t\tusername: user.username\n\t\tuid: user.uid\n\t\taccess_token: access_token\n\t\texpires_in: expires_in\n\n# Verify JSON Web Token\n\nverifyToken = (req, res, next) ->\n\n\tif req.params.path?\n\t\tif req.params.path == 'secret_key'\n\t\t\tget_all = await secretKey.find({})\n\t\t\tif get_all.length <= 0\n\t\t\t\treturn next()\n\t\telse if req.params.path == 'signup'\n\t\t\tget_all = await userAuth.find({})\n\t\t\tif get_all.length <= 0\n\t\t\t\treturn next()\n\n\ttoken = req.query.auth_token or req.headers['x-access-token'] or req.headers['authorization']\n\n\tif !token\n\t\treturn res.status(401).json(\n\t\t\tstatus: 'error'\n\t\t\tresponse: message: 'No token provided.')\n\n\telse\n\t\tjwt.verify token, SECRET_KEY, (error, decoded) ->\n\t\t\tcurrent_time = Math.round(Date.now() / 1000)\n\t\t\texpires_in = 24 * 60 * 60\n\t\t\tone_hour = 60 * 60\n\t\t\tif error\n\t\t\t\treturn res.status(401).json(\n\t\t\t\t\tstatus: 'error'\n\t\t\t\t\tresponse: message: 'Invalid token.')\n\t\t\telse if current_time < decoded.exp and current_time + expires_in > decoded.exp + one_hour\n\t\t\t\tres.locals.refresh_token = signToken(decoded)\n\t\t\t\tnext()\n\t\t\telse\n\t\t\t\tnext()\n\t\t\treturn\n\treturn\n\nmodule.exports =\n\tobjOmit: objOmit\n\tresponseFormat: responseFormat\n\tschemaAsync: schemaAsync\n\tupdateQuery: updateQuery\n\tincorrectUserOrPass: incorrectUserOrPass\n\tuserNotFound: userNotFound\n\tnoCurrentPass: noCurrentPass\n\tallowedPassword: allowedPassword\n\tsignToken: signToken\n\tverifyToken: verifyToken\n\n#::: End Program :::"
  ]
}