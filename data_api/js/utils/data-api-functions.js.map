{
  "version": 3,
  "file": "data-api-functions.js",
  "sourceRoot": "../../src/utils/",
  "sources": [
    "data-api-functions.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "uuid = require('uuid/v4')\njwt = require('jsonwebtoken')\nschemaInfo = require('./config-wrapper').schemaInfo\nuserAuth = require('./config-wrapper').userAuth\nsecretKey = require('./config-wrapper').secretKey\nSECRET_KEY = uuid()\n\n#: Omit Properties from Object and get Copy\n\nobjOmit = (obj, keys) ->\n\tclone = Object.assign({}, obj)\n\tfor key in keys\n\t\tdelete obj[key]\n\treturn clone\n\n #: Response/Error JSON\n\nresponseFormat = (method, args, req, res) ->\n\ttry\n\t\tresponse = await method(...args);\n\t\tret_json =\n\t\t\tstatus: 'ok'\n\t\t\tresponse: response\n\t\tif res.locals.refresh_token?\n\t\t\tret_json.refresh_token = res.locals.refresh_token\n\t\treturn res.json(ret_json)\n\tcatch error\n\t\terr_json =\n\t\t\tstatus: 'error'\n\t\t\tresponse: error\n\t\tif res.locals.refresh_token?\n\t\t\terr_json.refresh_token = res.locals.refresh_token\n\t\treturn res.status(500).json(err_json)\n\n#: Update Query\n\nupdateQuery = (req, primary_key) ->\n  update_query = objOmit(req.query, [ primary_key ])\n  if update_query.update_primary?\n    update_query[primary_key] = update_query.update_primary\n    update_query.update_primary = null\n  return update_query\n\n#: Get Schema Info Async\n\nschemaAsync = (model, primary_key) ->\n  Promise.resolve schemaInfo(model, primary_key)\n\n#: Incorrect Secret Key\n\nincorrectSecretKey = (res) ->\n  res.status(401).json\n    status: 'error'\n    response:\n      message: 'Incorrect secret key.'\n      codes: [ 'INCORRECT' ]\n\n#: Incorrect Username or Password JSON\n\nincorrectUserOrPass = (res) ->\n  res.status(401).json\n    status: 'error'\n    response:\n      message: 'Incorrect username or password.'\n      codes: [ 'INCORRECT' ]\n\n#: User Not Found JSON\n\nuserNotFound = (res) ->\n  res.status(401).json\n    status: 'error'\n    response:\n      message: 'User does not exist.'\n      codes: [ 'USER_NOT_FOUND' ]\n\n#: No Current Password JSON\n\nnoCurrentPass = (res) ->\n  res.status(401).json\n    status: 'error'\n    response:\n      message: 'Must include current password.'\n      codes: [ 'NO_CURRENT_PASS' ]\n\n#: Allowed Password Check\n\nallowedPassword = (req, res) ->\n  error_msg = ''\n  error_codes = []\n  if req.query.username.length < 8\n    error_msg += 'Username must be at least 8 characters. '\n    error_codes.push 'USER_LENGTH'\n  if req.query.password.length < 8\n    error_msg += 'Password must be at least 8 characters. '\n    error_codes.push 'PASS_LENGTH'\n  if !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(req.query.password)\n    error_msg += 'Password must have at least 1 letter and at least 1 character. '\n    error_codes.push 'PASS_CHAR'\n  if error_msg.length > 0\n    error_msg = error_msg.substring(0, error_msg.length - 1)\n    error =\n      message: error_msg\n      codes: error_codes\n    return res.status(401).json(\n      status: 'error'\n      response: error)\n  return\n\n#: Sign JSON Web Token\n\nsignToken = (user) ->\n  expires_in = 24 * 60 * 60\n  access_token = jwt.sign({\n    username: user.username\n    uid: user.uid\n  }, SECRET_KEY, expiresIn: expires_in)\n\n  return\n    username: user.username\n    uid: user.uid\n    access_token: access_token\n    expires_in: expires_in\n\n# Verify JSON Web Token\n\nverifyToken = (req, res, next) ->\n\n  if req.params.path?\n    if req.params.path == 'secret_key'\n      get_all = await secretKey.find({})\n      if get_all.length <= 0\n        return next()\n    else if req.params.path == 'signup'\n      get_all = await userAuth.find({})\n      if get_all.length <= 0\n        return next()\n\n  token = req.query.auth_token or req.headers['x-access-token'] or req.headers['authorization']\n\n  if !token\n    return res.status(401).json(\n      status: 'error'\n      response: message: 'No token provided.')\n\n  else\n    jwt.verify token, SECRET_KEY, (error, decoded) ->\n      current_time = Math.round(Date.now() / 1000)\n      expires_in = 24 * 60 * 60\n      one_hour = 60 * 60\n      if error\n        return res.status(401).json(\n          status: 'error'\n          response: message: 'Invalid token.')\n      else if current_time < decoded.exp and current_time + expires_in > decoded.exp + one_hour\n        res.locals.refresh_token = signToken(decoded)\n        next()\n      else\n        next()\n      return\n  return\n\nmodule.exports =\n  objOmit: objOmit\n  responseFormat: responseFormat\n  schemaAsync: schemaAsync\n  updateQuery: updateQuery\n  incorrectUserOrPass: incorrectUserOrPass\n  userNotFound: userNotFound\n  noCurrentPass: noCurrentPass\n  allowedPassword: allowedPassword\n  signToken: signToken\n  verifyToken: verifyToken\n\n#::: End Program :::"
  ]
}