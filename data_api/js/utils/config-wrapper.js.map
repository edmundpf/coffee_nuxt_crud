{
  "version": 3,
  "file": "config-wrapper.js",
  "sourceRoot": "../../src/utils/",
  "sources": [
    "config-wrapper.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "models = require('../models')\nschemaConfig = require('../../config/schema-config.json')\nserverConfig = require('../../config/server-config.json')\n\n#: Special Models\n\nuserAuth = models.userAuth\nsecretKey = models.secretKey\n\n#: Config\n\nserverPort = serverConfig.serverPort\ncorsPort = serverConfig.corsPort\nmongoosePort = serverConfig.mongoosePort\ndatabaseName = serverConfig.databaseName\n\n#: Route Methods\n\nlist_methods = [\n\t'set'\n\t'push'\n\t'push_unique'\n]\n\nnormal_methods = [\n\t'insert'\n\t'update'\n\t'delete'\n\t'delete_all'\n\t'get'\n\t'get_all'\n\t'sterilize'\n\t'schema'\n]\n\nroute_methods = [...normal_methods, ...list_methods]\n\n#: Get Schema Info\n\nschemaInfo = (model, primary_key) ->\n\tschema = model.schema.paths\n\tlist_keys = []\n\n\tfor key, value of schema\n\t\tif value.$isMongooseArray? and value.$isMongooseArray\n\t\t\tlist_keys.push key\n\n\treturn\n\t\tschema: Object.keys schema\n\t\tprimary_key: primary_key\n\t\tlist_fields: list_keys\n\n#: Get Routes\n\ngetRoutes = () ->\n\tlist_routes = {}\n\tnormal_routes = {}\n\tschemas = Object.keys(models)\n\n\tfor key of models\n\t\tprimary_key = schemaConfig[key].primary_key\n\t\tschema_info = schemaInfo models[key], primary_key\n\t\troute_info =\n\t\t\tmodel: models[key]\n\t\t\tprimary_key: primary_key\n\t\t\tlist_fields: schema_info.list_fields\n\n\t\tif schema_info.list_fields.length > 0\n\t\t\tlist_routes[schemaConfig[key].path] = route_info\n\t\telse\n\t\t\tnormal_routes[schemaConfig[key].path] = route_info\n\n\treturn\n\t\tlist: list_routes\n\t\tnormal: normal_routes\n\n#: Routes\n\nroutes = getRoutes()\nlist_routes = routes.list\nnormal_routes = routes.normal\napp_routes = {...list_routes, ...normal_routes}\n\n#: Exports\n\nmodule.exports =\n\tuserAuth: userAuth\n\tsecretKey: secretKey\n\tlist_routes: list_routes\n\tnormal_routes: normal_routes\n\tapp_routes: app_routes\n\tlist_methods: list_methods\n\tnormal_methods: normal_methods\n\troute_methods: route_methods\n\tserverPort: serverPort\n\tcorsPort: corsPort\n\tmongoosePort: mongoosePort\n\tdatabaseName: databaseName\n\tschemaInfo: schemaInfo\n\n#::: End Program :::"
  ]
}